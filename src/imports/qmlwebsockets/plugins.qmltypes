import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -notrelocatable Qt.WebSockets 1.0'

Module {
    Component {
        name: "QQmlWebSocket"
        prototype: "QObject"
        exports: ["Qt.WebSockets/WebSocket 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ReadyState"
            values: {
                "CONNECTING": 0,
                "OPEN": 1,
                "CLOSING": 2,
                "CLOSED": 3
            }
        }
        Enum {
            name: "Exception"
            values: {
                "SyntaxError": 0,
                "SecurityError": 1,
                "InvalidAccessError": 2,
                "InvalidStateError": 3
            }
        }
        Property { name: "url"; type: "QUrl" }
        Property { name: "readyState"; type: "ReadyState"; isReadonly: true }
        Property { name: "extensions"; type: "string"; isReadonly: true }
        Property { name: "protocol"; type: "string"; isReadonly: true }
        Signal { name: "connected" }
        Signal {
            name: "errorOccurred"
            Parameter { name: "errno"; type: "ushort" }
            Parameter { name: "message"; type: "string" }
        }
        Signal {
            name: "closed"
            Parameter { name: "wasClean"; type: "bool" }
            Parameter { name: "code"; type: "ushort" }
            Parameter { name: "reason"; type: "string" }
        }
        Signal {
            name: "textMessage"
            Parameter { name: "message"; type: "string" }
        }
        Signal {
            name: "binaryMessage"
            Parameter { name: "message"; type: "QByteArray" }
        }
        Signal {
            name: "exception"
            Parameter { name: "exception"; type: "Exception" }
        }
        Signal {
            name: "stateChanged"
            Parameter { name: "readyState"; type: "ReadyState" }
        }
        Method {
            name: "sendTextMessage"
            Parameter { name: "message"; type: "string" }
        }
        Method {
            name: "sendBinaryMessage"
            Parameter { name: "message"; type: "QByteArray" }
        }
        Method {
            name: "close"
            Parameter { name: "code"; type: "ushort" }
            Parameter { name: "reason"; type: "string" }
        }
        Method {
            name: "close"
            Parameter { name: "code"; type: "ushort" }
        }
        Method { name: "close" }
    }
}
